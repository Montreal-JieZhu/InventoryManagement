@model InventoryManagement.ViewModels.MaterialFormViewModel
@{
    ViewBag.Title = "MaterialForm";
    Layout = "~/Views/Shared/_MyMasterLayout.cshtml";
}

<script>
    var materialCount = 1;
    function AddMaterial(plusElement) {
        $(plusElement).parent().parent().clone().appendTo($(plusElement).parent().parent().parent());
        materialCount++;
    }
    function DeleteMaterial(delElement) {
        if ((materialCount - 1) != 0) {
            $(delElement).parent().parent().remove();
            materialCount--;
        }
    }
</script>




<div class="row">
    <div class="col-md-12">

        @if (Model.Material.ID == 0)
        {
            <h2 class="page-title">Add New Material</h2>
        }
        else
        {
            <h2 class="page-title">Edit Material: @Model.Material.Name</h2>
        }


        @using (Html.BeginForm("Save", "Material"))
        {
            @Html.ValidationSummary(true, "Please fix the following errors.")



            <!-- PANEL WITH FOOTER -->
            <div class="panel">
                <div class="panel-heading">
                    <div class="left">
                        <H4>Material Information</H4>
                    </div>
                    <div class="right">
                        <button type="button" class="btn-toggle-collapse"><i class="lnr lnr-chevron-up"></i></button>
                    </div>
                </div>

                <div class="panel-body">

                    <div class="form-group">
                        @Html.LabelFor(m => m.Material.MaterialCode)
                        @Html.TextBoxFor(m => m.Material.MaterialCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Material.MaterialCode)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Material.Name)
                        @Html.TextBoxFor(m => m.Material.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Material.Name)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Material.Quantity)
                        @Html.TextBoxFor(m => m.Material.Quantity, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Material.Quantity)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Material.Price)
                        @Html.TextBoxFor(m => m.Material.Price, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Material.Price)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Material.MaterialTypeID)
                        @Html.DropDownListFor(m => m.Material.MaterialTypeID, new SelectList(Model.MaterialTypes, "ID", "DisplayType"), "Please select a Brand", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Material.MaterialTypeID)
                    </div>
                </div>
            </div>

            @Html.AntiForgeryToken();
            @Html.HiddenFor(m => m.Material.ID)

            <div class="row">
                <div class="col-md-2 col-md-offset-10">
                    <button type="submit" class="btn btn-default">Save</button>
                </div>
            </div>


        }

        @section scripts{
            @Scripts.Render("~/bundles/jqueryval")
        }



    </div>
</div>